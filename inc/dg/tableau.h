#pragma once

#include <vector>
#include <unordered_map>
#include "geometry/operator.h"

namespace dg{


template<class real_type>
struct ButcherTableau{
    ButcherTableau(){}
    ButcherTableau(unsigned s, unsigned order):
        m_a(s), m_b(s), m_c(s), m_bt(s), m_q(order), m_p(0){}
    ButcherTableau(unsigned s, unsigned order,
                   real_type* a , real_type* b , real_type* c):
        m_a(a, a+s*s), m_b(b, b+s), m_c(c, c+s), m_bt(b,b+s), m_q(order), m_p(0){}
    ButcherTableau(unsigned s, unsigned embedded_order, unsigned order):
        m_a(s), m_b(s), m_c(s), m_bt(s), m_q(order), m_p(embedded_order){}
    ButcherTableau(unsigned s, unsigned embedded_order, unsigned order
               real_type* a, real_type* b, real_type* bt, real_type* c):
        m_a(a, a+s*s), m_b(b,b+s), m_c(c,c+s), m_bt(bt, bt+s), m_q(order), m_p(embedded_order){}
    ///Construct from standard format
    ButcherTableau(unsigned s,
               real_type* data): ButcherTableau(s,embedded_order, order)
   {
       for( unsigned i=0; i<s; i++)
       {
           m_c[i] = data[i*(s+1)];
           for( unsigned j=0; j<s; j++)
               m_a(i,j) = data[i*(s+1)+j+1];
       }
       order = (unsigned)data[s*(s+1)];
       for( unsigned j=0; j<s; j++)
           m_b[j] = data[s*(s+1)+j+1];
       embedded_order = (unsigned)data[(s+1)*(s+1)];
       for( unsigned j=0; j<s; j++)
           m_bt[j] = data[(s+1)*(s+1)+j+1];
   }

    real_type a( unsigned i, unsigned j) const {
        return m_a(i,j);
    }
    real_type c( unsigned i) const {
        return m_c(i);
    }
    real_type b( unsigned j) const {
        return m_b(j);
    }
    real_type bt( unsigned j) const {
        return m_bt(j);
    }
    unsigned stages() const  {
        return m_c.size();
    }
    ///global order of accuracy for the method
    unsigned order() const {
        return m_q;
    }
    ///global order of accuracy for the embedding
    unsigned embedded_order() const{
        return m_p;
    }
    private:
    dg::Operator<real_type> m_a;
    std::vector<real_type> m_b, m_c, m_bt;
    unsigned m_q, m_p;
};


namespace tableau{

template<class real_type>
ButcherTableau<real_type> heun_euler_2_1_2()
{
    real_type a[2*2] = {0,0, 1,0};
    real_type b[2] = {0.5, 0.5};
    real_type bt[2] = {1., 0.};
    real_type c[2] = {0,1};
    return ButcherTableau<real_type>(2,1,2, a, b, bt, c);
}
template<class real_type>
ButcherTableau<real_type> bogacki_shampine_4_2_3()
{
    real_type a[4*4] = {
        0,0,0,0,
        0.5,0,0,0,
        0,0.75,0,0,
        2./9., 1./3., 4./9., 0.};
    real_type b[4] = {2./9., 1./3., 4./9., 0.};
    real_type bt[4] = {7./24., 1./4.,1./3.,1./8.};
    real_type c = {0.,0.5,3./4.,1.};
    return ButcherTableau<real_type>(4,2,3, a, b, bt, c);
}
template<class real_type>
ButcherTableau<real_type> ark324l2sa_erk_4_2_3()
{
    real_type data[5*6] = {
  0, 0, 0, 0, 0,
  1767732205903./2027836641118., 1767732205903./2027836641118., 0, 0, 0,
  3./5., 5535828885825./10492691773637., 788022342437./10882634858940., 0, 0,
  1, 6485989280629./16251701735622., -4246266847089./9704473918619., 10755448449292./10357097424841., 0. ,
  3, 1471266399579./7840856788654., -4482444167858./7529755066697., 11266239266428./11593286722821., 1767732205903./4055673282236.,
  2, 2756255671327./12835298489170., -10771552573575./22201958757719., 9247589265047./10645013368117., 2193209047091./5459859503100.
    }
    return ButcherTableau<real_type>(4,data);
}
template<real_type>
ButcherTableau<real_type> zonneveld_5_3_4()
{
    real_type data[] = {
    0 , 0 , 0 , 0 , 0 , 0 ,
  1./2. , 1./2. , 0 , 0 , 0 , 0 ,
  1./2. , 0 , 1./2. , 0 , 0 , 0 ,
    1 , 0 , 0 , 1 , 0 , 0 ,
  3./4. , 5./32. , 7./32. , 13./32. , -1./32. , 0 ,
  4 , 1./6. , 1./3. , 1./3. , 1./6. , 0 ,
  3 , -1./2. , 7./3. , 7./3. , 13./6. , -16./3.};
    return ButcherTableau<real_type>(5,data);
}
template<class real_type>
ButcherTableau<real_type> ark436l2sa_erk_6_3_4()
{
    real_type data[] = {
    0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  0.5 , 0.5 , 0 , 0 , 0 , 0 , 0 ,
  83./250. , 13861./62500. , 6889./62500. , 0 , 0 , 0 , 0 ,
  31./50. , -116923316275./2393684061468. , -2731218467317./15368042101831. , 9408046702089./11113171139209. , 0 , 0 , 0 ,
  17./20. , -451086348788./2902428689909. , -2682348792572./7519795681897. , 12662868775082./11960479115383. , 3355817975965./11060851509271. , 0 , 0 ,
  1 , 647845179188./3216320057751. , 73281519250./8382639484533. , 552539513391./3454668386233. , 3354512671639./8306763924573. , 4040./17871. , 0 ,
  4 , 82889./524892. , 0 , 15625./83664. , 69875./102672. , -2260./8211. , 0.25 ,
  3 , 4586570599./29645900160. , 0 , 178811875./945068544. , 814220225./1159782912. , -3700637./11593932. , 61727./225920.
    }
    return ButcherTableau<real_type>(6,data);
}
template<class real_type>
ButcherTableau<real_type> sayfy_aburub_6_3_4()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./2. , 1./2. , 0 , 0 , 0 , 0 , 0 ,
  1 , -1 , 2 , 0 , 0 , 0 , 0 ,
  1 , 1./6. , 2./3. , 1./6. , 0 , 0 , 0 ,
  1./2. , 0.137 , 0.226 , 0.137 , 0 , 0 , 0 ,
  1 , 0.452 , -0.904 , -0.548 , 0 , 2 , 0 ,
  4 , 1./6. , 1./3. , 1./12. , 0 , 1./3. , 1./12. ,
  3 , 1./6. , 2./3. , 1./6. , 0 , 0 , 0
    }
    return ButcherTableau<real_type>(6,data);
}
template<class real_type>
ButcherTableau<real_type> cash_karp_6_4_5()
{
    real_type data[] = {0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./5. , 1./5. , 0 , 0 , 0 , 0 , 0 ,
  3./10. , 3./40. , 9./40. , 0 , 0 , 0 , 0 ,
  3./5. , 3./10. , -9./10. , 6./5. , 0 , 0 , 0 ,
  1 , -11./54. , 5./2. , -70./27. , 35./27. , 0 , 0 ,
  7./8. , 1631./55296. , 175./512. , 575./13824. , 44275./110592. , 253./4096. , 0 ,
  5 , 37./378. , 0 , 250./621. , 125./594. , 0 , 512./1771. ,
  4 , 2825./27648. , 0 , 18575./48384. , 13525./55296. , 277./14336. , 1./4.
  }
    return ButcherTableau<real_type>(6,data);
}
template<class real_type>
ButcherTableau<real_type> fehlberg_6_4_5()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./4. , 1./4. , 0 , 0 , 0 , 0 , 0 ,
  3./8. , 3./32. , 9./32. , 0 , 0 , 0 , 0 ,
  12./13. , 1932./2197. , -7200./2197. , 7296./2197. , 0 , 0 , 0 ,
  1 , 439./216. , -8 , 3680./513. , -845./4104. , 0 , 0 ,
  1./2. , -8./27. , 2 , -3544./2565. , 1859./4104. , -11./40. , 0 ,
  5 , 16./135. , 0 , 6656./12825. , 28561./56430. , -9./50. , 2./55. ,
  4 , 25./216. , 0 , 1408./2565. , 2197./4104. , -1./5. , 0
    }
    return ButcherTableau<real_type>(6,data);
}
template<class real_type>
ButcherTableau<real_type dormand_prince_7_4_5()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./5. , 1./5. , 0 , 0 , 0 , 0 , 0 , 0 ,
  3./10. , 3./40. , 9./40. , 0 , 0 , 0 , 0 , 0 ,
  4./5. , 44./45. , -56./15. , 32./9. , 0 , 0 , 0 , 0 ,
  8./9. , 19372./6561. , -25360./2187. , 64448./6561. , -212./729. , 0 , 0 , 0 ,
  1 , 9017./3168. , -355./33. , 46732./5247. , 49./176. , -5103./18656. , 0 , 0 ,
  1 , 35./384. , 0 , 500./1113. , 125./192. , -2187./6784. , 11./84. , 0 ,
  5 , 35./384. , 0 , 500./1113. , 125./192. , -2187./6784. , 11./84. , 0 ,
  4 , 5179./57600. , 0 , 7571./16695. , 393./640. , -92097./339200. , 187./2100. , 1./40.
    }
    return ButcherTableau<real_type>(7,data);
}
template<class real_type>
ButcherTableau<real_type ark548l2sa_erk_8_4_5()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  41./100. , 41./100. , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  2935347310677./11292855782101. , 367902744464./2072280473677. , 677623207551./8224143866563. , 0 , 0 , 0 , 0 , 0 , 0 ,
  1426016391358./7196633302097. , 1268023523408./10340822734521. , 0 , 1029933939417./13636558850479. , 0 , 0 , 0 , 0 , 0 ,
  92./100. , 14463281900351./6315353703477. , 0 , 66114435211212./5879490589093. , -54053170152839./4284798021562. , 0 , 0 , 0 , 0 ,
  24./100. , 14090043504691./34967701212078. , 0 , 15191511035443./11219624916014. , -18461159152457./12425892160975. , -281667163811./9011619295870. , 0 , 0 , 0 ,
  3./5. , 19230459214898./13134317526959. , 0 , 21275331358303./2942455364971. , -38145345988419./4862620318723. , -1./8. , -1./8. , 0 , 0 ,
  1 , -19977161125411./11928030595625. , 0 , -40795976796054./6384907823539. , 177454434618887./12078138498510. , 782672205425./8267701900261. , -69563011059811./9646580694205. , 7356628210526./4942186776405. , 0 ,
  5 , -872700587467./9133579230613. , 0 , 0 , 22348218063261./9555858737531. , -1143369518992./8141816002931. , -39379526789629./19018526304540. , 32727382324388./42900044865799. , 41./200. ,
  4 , -975461918565./9796059967033. , 0 , 0 , 78070527104295./32432590147079. , -548382580838./3424219808633. , -33438840321285./15594753105479. , 3629800801594./4656183773603. , 4035322873751./18575991585200.
    }
    return ButcherTableau<real_type>( 8, data);
}
template<class real_type>
ButcherTableau<real_type verner_8_5_6()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./6. , 1./6. , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  4./15. , 4./75. , 16./75. , 0 , 0 , 0 , 0 , 0 , 0 ,
  2./3. , 5./6. , -8./3. , 5./2. , 0 , 0 , 0 , 0 , 0 ,
  5./6. , -165./64. , 55./6. , -425./64. , 85./96. , 0 , 0 , 0 , 0 ,
  1 , 12./5. , -8 , 4015./612. , -11./36. , 88./255. , 0 , 0 , 0 ,
  1./15. , -8263./15000. , 124./75. , -643./680. , -81./250. , 2484./10625. , 0 , 0 , 0 ,
  1 , 3501./1720. , -300./43. , 297275./52632. , -319./2322. , 24068./84065. , 0 , 3850./26703. , 0 ,
  6 , 3./40. , 0 , 875./2244. , 23./72. , 264./1955. , 0 , 125./11592. , 43./616. ,
  5 , 13./160. , 0 , 2375./5984. , 5./16. , 12./85. , 3./44. , 0 , 0
    }
    return ButcherTableau<real_type>( 8, data);
}
template<class real_type>
ButcherTableau<real_type> fehlberg_13_7_8()
{
    real_type data[] = {
        0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  2./27.,   2./27., 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  1./9.,   1./36., 1./12., 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  1./6.,   1./24., 0, 1./8., 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  5./12.,   5./12., 0, -25./16., 25./16., 0, 0, 0, 0, 0, 0, 0, 0, 0,
  1./2.,   1./20., 0, 0, 1./4., 1./5., 0, 0, 0, 0, 0, 0, 0, 0,
  5./6.,   -25./108., 0, 0, 125./108., -65./27., 125./54., 0, 0, 0, 0, 0, 0, 0,
  1./6.,   31./300., 0, 0, 0, 61./225., -2./9., 13./900., 0, 0, 0, 0, 0, 0,
  2./3.,   2, 0, 0, -53./6., 704./45., -107./9., 67./90., 3, 0, 0, 0, 0, 0,
  1./3.,   -91./108., 0, 0, 23./108., -976./135., 311./54., -19./60., 17./6., -1./12., 0, 0, 0, 0,
  1,   2383./4100., 0, 0, -341./164., 4496./1025., -301./82., 2133./4100., 45./82., 45./164., 18./41., 0, 0, 0,
  0,   3./205., 0, 0, 0, 0, -6./41., -3./205., -3./41., 3./41., 6./41., 0, 0, 0,
  1,   -1777./4100., 0, 0, -341./164., 4496./1025., -289./82., 2193./4100., 51./82., 33./164., 12./41., 0, 1, 0,
  8, 0, 0, 0, 0, 0, 34./105., 9./35., 9./35., 9./280., 9./280., 0, 41./840., 41./840. ,
  7, 41./840., 0, 0, 0, 0, 34./105., 9./35., 9./35., 9./280., 9./280., 41./840., 0, 0
    }
    return ButcherTableau<real_type>( 13, data);
}
///%%%%%%%%%%%%%%%%%%%%%%%%%%%Implicit Butcher tables%%%%%%%%%%%%%%%%%%

template<class real_type>
ButcherTableau<real_type> sdirk_2_1_2()
{
    real_type data[] = {
        1 , 1 , 0 ,
  0 , -1 , 1 ,
  2 , 1./2. , 1./2. ,
  1 , 1 , 0
    }
    return ButcherTableau<real_type>( 2, data);
}
template<class real_type>
ButcherTableau<real_type> billington_3_3_2()
{
    real_type data[] = {
  0.292893218813 , 0.292893218813 , 0 , 0 ,
  1.091883092037 , 0.798989873223 , 0.292893218813 , 0 ,
  1.292893218813 , 0.740789228841 , 0.259210771159 , 0.292893218813 ,
  2 , 0.740789228840 , 0.259210771159 , 0 ,
  3 , 0.691665115992 , 0.503597029883 , -0.195262145876
    }
    return ButcherTableau<real_type>( 3, data);
}
template<class real_type>
ButcherTableau<real_type> trbdf2_3_3_2()
{
    real_type data[] = {
          0 , 0 , 0 , 0 ,
  2-sqrt(2) , (2-sqrt(2))/2. , (2-sqrt(2))/2. , 0 ,
  1 , sqrt(2)/4. , sqrt(2)./4. , (2-sqrt(2))/2. ,
  2 , sqrt(2)/4. , sqrt(2.)/4. , (2-sqrt(2))/2. ,
  3 , (1-sqrt(2)/4.)/3. , (3*sqrt(2)./4.+1.)/3. , (2-sqrt(2))/6.
    }
    return ButcherTableau<real_type>( 3, data);
}
template<class real_type>
ButcherTableau<real_type> kvaerno_4_2_3()
{
    real_type data[] = {
          0 , 0 , 0 , 0 , 0 ,
  0.871733043 , 0.4358665215 , 0.4358665215 , 0 , 0 ,
  1 , 0.490563388419108 , 0.073570090080892 , 0.4358665215 , 0 ,
  1 , 0.308809969973036 , 1.490563388254106 , -1.235239879727145 , 0.4358665215 ,
  3 , 0.308809969973036 , 1.490563388254106 , -1.235239879727145 , 0.4358665215 ,
  2 , 0.490563388419108 , 0.073570090080892 , 0.4358665215 , 0
    }
    return ButcherTableau<real_type>( 4, data);
}
template<class real_type>
ButcherTableau<real_type> ark324l2sa_dirk_4_2_3()
{
    real_type data[] = {
          0 , 0 , 0 , 0 , 0 ,
  1767732205903./2027836641118. , 1767732205903./4055673282236. , 1767732205903./4055673282236. , 0 , 0 ,
  3./5. , 2746238789719./10658868560708. , -640167445237./6845629431997. , 1767732205903./4055673282236. , 0 ,
  1 , 1471266399579./7840856788654. , -4482444167858./7529755066697. , 11266239266428./11593286722821. , 1767732205903./4055673282236. ,
  3 , 1471266399579./7840856788654. , -4482444167858./7529755066697. , 11266239266428./11593286722821. , 1767732205903./4055673282236. ,
  2 , 2756255671327./12835298489170. , -10771552573575./22201958757719. , 9247589265047./10645013368117. , 2193209047091./5459859503100.
    }
    return ButcherTableau<real_type>( 4, data);
}
template<class real_type>
ButcherTableau<real_type> cash_5_2_4()
{
    real_type data[] = {
          0.435866521508 , 0.435866521508 , 0 , 0 , 0 , 0 ,
  -0.7 , -1.13586652150 , 0.435866521508 , 0 , 0 , 0 ,
  0.8 , 1.08543330679 , -0.721299828287 , 0.435866521508 , 0 , 0 ,
  0.924556761814 , 0.416349501547 , 0.190984004184 , -0.118643265417 , 0.435866521508 , 0 ,
  1 , 0.896869652944 , 0.0182725272734 , -0.0845900310706 , -0.266418670647 , 0.435866521508 ,
  \hline
  4 , 0.896869652944 , 0.0182725272734 , -0.0845900310706 , -0.266418670647 , 0.435866521508 ,
  2 , 1.05646216107052 , -0.0564621610705236 , 0 , 0 , 0
    }
    return ButcherTableau<real_type>( 5, data);
}
template<class real_type>
ButcherTableau<real_type> cash_5_3_4()
{
    real_type data[] = {
          0.435866521508 , 0.435866521508 , 0 , 0 , 0 , 0 ,
  -0.7 , -1.13586652150 , 0.435866521508 , 0 , 0 , 0 ,
  0.8 , 1.08543330679 , -0.721299828287 , 0.435866521508 , 0 , 0 ,
  0.924556761814 , 0.416349501547 , 0.190984004184 , -0.118643265417 , 0.435866521508 , 0 ,
  1 , 0.896869652944 , 0.0182725272734 , -0.0845900310706 , -0.266418670647 , 0.435866521508 ,
  \hline
  4 , 0.896869652944 , 0.0182725272734 , -0.0845900310706 , -0.266418670647 , 0.435866521508 ,
  3 , 0.776691932910 , 0.0297472791484 , -0.0267440239074 , 0.220304811849 , 0
    }
    return ButcherTableau<real_type>( 5, data);
}
template<class real_type>
ButcherTableau<real_type> cash_5_3_4()
{
    real_type data[] = {
        1./4. , 1./4. , 0 , 0 , 0 , 0 ,
  3./4. , 1./2. , 1./4. , 0 , 0 , 0 ,
  11./20. , 17./50. , -1./25. , 1./4. , 0 , 0 ,
  1./2. , 371./1360. , -137./2720. , 15./544. , 1./4. , 0 ,
  1 , 25./24. , -49./48. , 125./16. , -85./12. , 1./4. ,
  4 , 25./24. , -49./48. , 125./16. , -85./12. , 1./4. ,
  3 , 59./48. , -17./96. , 225./32. , -85./12. , 0
    }
    return ButcherTableau<real_type>( 5, data);
}
template<class real_type>
ButcherTableau<real_type> kvaerno_5_3_4()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 ,
  0.871733043 , 0.4358665215  , 0.4358665215  , 0 , 0 , 0 ,
  0.468238744853136 , 0.140737774731968 , -0.108365551378832 , 0.4358665215 , 0 , 0 ,
  1 , 0.102399400616089 , -0.376878452267324 , 0.838612530151233 , 0.4358665215 , 0 ,
  1 , 0.157024897860995 , 0.117330441357768 , 0.61667803039168 , -0.326899891110444 , 0.4358665215 ,
  \hline
  4 , 0.157024897860995 , 0.117330441357768 , 0.61667803039168 , -0.326899891110444 , 0.4358665215 ,
  3 , 0.102399400616089 , -0.376878452267324 , 0.838612530151233 , 0.4358665215 , 0
    }
    return ButcherTableau<real_type>( 5, data);
}
template<class real_type>
ButcherTableau<real_type> ark436l2sa_dirk_6_3_4()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  1./2. , 1./4. , 1./4. , 0 , 0 , 0 , 0 ,
  83./250. , 8611./62500. , -1743./31250. , 1./4. , 0 , 0 , 0 ,
  31./50. , 5012029./34652500. , -654441./2922500. , 174375./388108. , 1./4. , 0 , 0 ,
  17./20. , 15267082809./155376265600. , -71443401./120774400. , 730878875./902184768. , 2285395./8070912. , 1./4. , 0 ,
  1 , 82889./524892. , 0 , 15625./83664. , 69875./102672. , -2260./8211. , 1./4. ,
  4 , 82889./524892. , 0 , 15625./83664. , 69875./102672. , -2260./8211. , 1./4. ,
  3 , 4586570599./29645900160. , 0 , 178811875./945068544. , 814220225./1159782912. , -3700637./11593932. , 61727./225920.
    }
    return ButcherTableau<real_type>( 6, data);
}
template<class real_type>
ButcherTableau<real_type> kvaerno_7_4_5()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  0.52 , 0.26 , 0.26 , 0 , 0 , 0 , 0 , 0 ,
  1.230333209967908 , 0.13 , 0.84033320996790809 , 0.26 , 0 , 0 , 0 , 0 ,
  0.895765984350076 , 0.22371961478320505 , 0.47675532319799699 , -0.06470895363112615 , 0.26 , 0 , 0 , 0 ,
  0.436393609858648 , 0.16648564323248321 , 0.10450018841591720 , 0.03631482272098715 , -0.13090704451073998 , 0.26 , 0 , 0 ,
  1 , 0.13855640231268224 , 0 , -0.04245337201752043 , 0.02446657898003141 , 0.61943039072480676 , 0.26 , 0 ,
  1 , 0.13659751177640291 , 0 , -0.05496908796538376 , -0.04118626728321046 , 0.62993304899016403 , 0.06962479448202728 , 0.26 ,
  5 , 0.13659751177640291 , 0 , -0.05496908796538376 , -0.04118626728321046 , 0.62993304899016403 , 0.06962479448202728 , 0.26 ,
  4 , 0.13855640231268224 , 0 , -0.04245337201752043 , 0.02446657898003141 , 0.61943039072480676 , 0.26 , 0
    }
    return ButcherTableau<real_type>( 7, data);
}
template<class real_type>
ButcherTableau<real_type> ark548l2sa_dirk_8_4_5()
{
    real_type data[] = {
        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
  41./100. , 41./200. , 41./200. , 0 , 0 , 0 , 0 , 0 , 0 ,
  2935347310677./11292855782101. , 41./400. , -567603406766./11931857230679. , 41./200. , 0 , 0 , 0 , 0 , 0 ,
  1426016391358./7196633302097. , 683785636431./9252920307686. , 0 , -110385047103./1367015193373. , 41./200. , 0 , 0 , 0 , 0 ,
  92./100. , 3016520224154./10081342136671. , 0 , 30586259806659./12414158314087. , -22760509404356./11113319521817. , 41./200. , 0 , 0 , 0 ,
  24./100. , 218866479029./1489978393911. , 0 , 638256894668./5436446318841. , -1179710474555./5321154724896. , -60928119172./8023461067671. , 41./200. , 0 , 0 ,
  3./5. , 1020004230633./5715676835656. , 0 , 25762820946817./25263940353407. , -2161375909145./9755907335909. , -211217309593./5846859502534. , -4269925059573./7827059040749. , 41./200. , 0 ,
  1 , -872700587467./9133579230613. , 0 , 0 , 22348218063261./9555858737531. , -1143369518992./8141816002931. , -39379526789629./19018526304540. , 32727382324388./42900044865799. , 41./200. ,
  5 , -872700587467./9133579230613. , 0 , 0 , 22348218063261./9555858737531. , -1143369518992./8141816002931. , -39379526789629./19018526304540. , 32727382324388./42900044865799. , 41./200. ,
  4 , -975461918565./9796059967033. , 0 , 0 , 78070527104295./32432590147079. , -548382580838./3424219808633. , -33438840321285./15594753105479. , 3629800801594./4656183773603. , 4035322873751./18575991585200.
    }
    return ButcherTableau<real_type>( 8, data);
}

}//namespace tableau
enum tableau_identifier{
    HEUN_EULER_2_1_2,
    BOGACKI_SHAMPINE_4_2_3,
    ARK324L2SA_ERK_4_2_3,
    ZONNEVELD_5_3_4,
    ARK436L2SA_ERK_6_3_4,
    SAYFY_ABURUB_6_3_4,
    CASH_KARP_6_4_5,
    FEHLBERG_6_4_5,
    DORMAND_PRINCE_7_4_5,
    ARK548L2SA_ERK_8_4_5,
    VERNER_8_5_6,
    FEHLBERG_13_7_8,
    SDIRK_2_1_2,
    BILLINGTON_3_3_2,
    TRBDF2_3_3_2,
    KVAERNO_4_2_3,
    ARK324L2SA_DIRK_4_2_3,
    CASH_5_2_4,
    CASH_5_3_4,
    SDIRK_5_3_4,
    KVAERNO_5_3_4,
    ARK436L2SA_DIRK_6_3_4,
    KVAERNO_7_4_5,
    ARK548L2SA_DIRK_8_4_5
};
namespace create{
template<class real_type>
ButcherTableau<real_type> tableau( enum tableau_identifier id)
{
    switch(id){
        case HEUN_EULER_2_1_2:
            return dg::tableau::heun_euler_2_1_2<real_type>();
        case BOGACKI_SHAMPINE_4_2_3:
            return dg::tableau::bogacki_shampine_4_2_3<real_type>();
        case ARK324L2SA_ERK_4_2_3:
            return dg::tableau::ark324l2sa_erk_4_2_3<real_type>();
        case ZONNEVELD_5_3_4:
            return dg::tableau::zonneveld_5_3_4<real_type>();
        case ARK436L2SA_ERK_6_3_4:
            return dt::tableau::ark436l2sa_erk_6_3_4<real_type>();
        case SAYFY_ABURUB_6_3_4:
            return dt::tableau::sayfy_aburub_6_3_4<real_type>();
        case CASH_KARP_6_4_5:
            return dt::tableau::cash_karp_6_4_5<real_type>();
        case FEHLBERG_6_4_5:
            return dt::tableau::fehlberg_6_4_5<real_type>();
        case DORMAND_PRINCE_7_4_5:
            return dt::tableau::dormand_prince_7_4_5<real_type>();
        case ARK548L2SA_ERK_8_4_5:
            return dt::tableau::ark548l2sa_erk_8_4_5<real_type>();
        case VERNER_8_5_6:
            return dt::tableau::verner_8_5_6<real_type>();
        case FEHLBERG_13_7_8:
            return dt::tableau::fehlberg_13_7_8<real_type>();
        case SDIRK_2_1_2:
            return dt::tableau::sdirk_2_1_2<real_type>();
        case BILLINGTON_3_3_2:
            return dt::tableau::billington_3_3_2<real_type>();
        case TRBDF2_3_3_2:
            return dt::tableau::trbdf2_3_3_2<real_type>();
        case KVAERNO_4_2_3:
            return dt::tableau::kvaerno_4_2_3<real_type>();
        case ARK324L2SA_DIRK_4_2_3:
            return dt::tableau::ark324l2sa_dirk_4_2_3<real_type>();
        case CASH_5_2_4:
            return dt::tableau::cash_5_2_4<real_type>();
        case CASH_5_3_4:
            return dt::tableau::cash_5_3_4<real_type>();
        case SDIRK_5_3_4:
            return dt::tableau::sdirk_5_3_4<real_type>();
        case KVAERNO_5_3_4:
            return dt::tableau::kvaerno_5_3_4<real_type>();
        case ARK436L2SA_DIRK_6_3_4:
            return dt::tableau::ark436l2sa_dirk_6_3_4<real_type>();
        case KVAERNO_7_4_5:
            return dt::tableau::kvaerno_7_4_5<real_type>();
        case ARK548L2SA_DIRK_8_4_5:
            return dt::tableau::ark548l2sa_dirk_8_4_5<real_type>();
    }
    return ButcherTableau<real_type>();
}

template<class real_type>
ButcherTableau<real_type> tableau( std::string name)
{
    std::unordered_map<string, enum tableau_identifier> str2id{
        {"heun_euler_2_1_2", HEUN_EULER_2_1_2},
        {"bogacki_shampine_4_2_3", BOGACKI_SHAMPINE_4_2_3},
        {"ark324l2sa_erk_4_2_3", ARK324L2SA_ERK_4_2_3},
        {"zonneveld_5_3_4", ZONNEVELD_5_3_4},
        {"ark436l2sa_erk_6_3_4", ARK436L2SA_ERK_6_3_4},
        {"sayfy_aburub_6_3_4", SAYFY_ABURUB_6_3_4},
        {"cash_karp_6_4_5", CASH_KARP_6_4_5},
        {"fehlberg_6_4_5", FEHLBERG_6_4_5},
        {"dormand_prince_7_4_5", DORMAND_PRINCE_7_4_5},
        {"ark548l2sa_erk_8_4_5", ARK548L2SA_ERK_8_4_5},
        {"verner_8_5_6", VERNER_8_5_6},
        {"fehlberg_13_7_8", FEHLBERG_13_7_8},
        {"sdirk_2_1_2", SDIRK_2_1_2},
        {"billington_3_3_2", BILLINGTON_3_3_2},
        {"trbdf2_3_3_2", TRBDF2_3_3_2},
        {"kvaerno_4_2_3", KVAERNO_4_2_3},
        {"ark324l2sa_dirk_4_2_3", ARK324L2SA_DIRK_4_2_3},
        {"cash_5_2_4", CASH_5_2_4},
        {"cash_5_3_4", CASH_5_3_4},
        {"sdirk_5_3_4", SDIRK_5_3_4},
        {"kvaerno_5_3_4", KVAERNO_5_3_4},
        {"ark436l2sa_dirk_6_3_4", ARK436L2SA_DIRK_6_3_4},
        {"kvaerno_7_4_5", KVAERNO_7_4_5},
        {"ark548l2sa_dirk_8_4_"5 ARK548L2SA_DIRK_8_4_}
    };
    return tableau( str2id[name]);
}
}//namespace create
}//namespace dg
